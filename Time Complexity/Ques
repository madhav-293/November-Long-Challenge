A sorting algorithm AA is said to have more time complexity than a sorting algorithm BB if it uses more number of comparisons for sorting the same array than algorithm BB.

Given that algorithm AA uses XX comparisons to sort an array and algorithm BB uses YY comparisons to sort the same array, find whether algorithm AA has more time complexity.

Input Format
The first line of input will contain a single integer TT, denoting the number of test cases.
Each test case consists of two space-separated integers XX and YY — the number of comparisons used by algorithms AA and BB to sort the array respectively.
Output Format
For each test case, output on a new line, YES, if the algorithm AA has more time complexity than BB and NO otherwise.

You may print each character of the string in uppercase or lowercase (for example, the strings YES, yEs, yes, and yeS will all be treated as identical).

Constraints
1≤T≤100
1<=X, Y <= 100
Sample 1:
Input
Output
4
9 9
15 7
10 19
21 20
NO
YES
NO
YES
Explanation:
Test case 11: The number of comparisons used by algorithm AA is 99 and that used by BB is also 99. Since the number of comparisons used by AA is not more than that of BB, AA does not have more time complexity than BB.

Test case 22: The number of comparisons used by algorithm AA is 1515 and that used by BB is 77. Since the number of comparisons used by AA is more than that of BB, AA does have more time complexity than BB.

Test case 33: The number of comparisons used by algorithm AA is 1010 and that used by BB is 1919. Since the number of comparisons used by AA is not more than that of BB, AA does not have more time complexity than BB.

Test case 44: The number of comparisons used by algorithm AA is 2121 and that used by BB is 2020. Since the number of comparisons used by AA is more than that of BB, AA does have more time complexity than BB.
